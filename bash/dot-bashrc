# -*- mode: shell-script; -*-
# .bashrc
# Source global definitions

if [ -n "$BASHRC_USER_SOURCED" ]; then
    return 0;
fi

BASHRC_USER_SORUCED="Y"
if [ -f /etc/bashrc ]; then
	. /etc/bashrc
fi

shopt -s histappend
set -o noclobber
shopt -s cmdhist

export HISTCONTROL=ignoreboth:erasedups
export HISTSIZE=100000                   # big big history
export HISTFILESIZE=100000               # big big history
export HISTTIMEFORMAT='%F %T '

export LOCAL_PATH=$HOME/.local
export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:/usr/local/lib:/usr/local/lib64/"
export ALTERNATE_EDITOR=""
export EDITOR='emacsclient -nw'

export LC_ALL="en_US.UTF-8"
export XDG_DATA_DIRS="/usr/local/share:/usr/share"
export XDG_DATA_DIRS="$XDG_DATA_DIRS:/var/lib/flatpak/exports/share:$LOCAL_PATH/share/flatpak/exports/share"
export XDG_CONFIG_HOME=$HOME/.config

alias ls=exa
alias cat=bat

alias ec="emacsclient -t"
alias mp3-dl="yt-dlp --extract-audio"
alias mp3-tags="fd -t f -x ffprobe -loglevel error -show_entries format_tags=title,artist -of compact"

export PS1='[$(basename "$(dirname "$PWD")")/$(basename "$PWD")] $ ';

if [[ -z "${INSIDE_EMACS}" ]]; then
    export PS1='[$(basename "$(dirname "$PWD")")/$(basename "$PWD")] \[\e[0;31m$\e[0m\] ';
fi

export FZF_DEFAULT_OPTS='-e'
# bind does not work inside emacs
if [[ "$TERM" != "dumb" ]]; then
    source $XDG_CONFIG_HOME/fzf/completion.bash
    source $XDG_CONFIG_HOME/fzf/key-bindings.bash
fi

if [ -f .bash_functions ]; then
    source .bash_functions
fi

if [[ "$INSIDE_EMACS" = 'vterm' ]] ; then
	source $XDG_CONFIG_HOME/vterm/emacs-vterm.sh
fi

if [ -f .bash_env_local ]; then
    source .bash_env_local
fi

export RIPGREP_CONFIG_PATH=$XDG_CONFIG_HOME/ripgrep/config
export CMAKE_GENERATOR=Ninja
export DOCKER_BUILDKIT=1

export USE_BAZEL_VERSION=6.0.0

eval "$(zoxide init bash)"

export MANROFFOPT='-c'
export MANPAGER="sh -c 'col -bx | bat -l man -p'"
export LS_COLORS="$(vivid generate molokai)"

pdf-k2opt() {
    dir="${1:-PDF}"
    mkdir K2OPT;
    mkdir -p $dir/Converted
    pushd $dir
    for i in *.pdf; do
        echo "$i"
        echo | k2pdfopt -w 758 -h 1024 -odpi 212 -fc- "$i";
        mv "$i" Converted/
        mv "${i%.pdf}_k2opt.pdf" "../K2OPT/$i"
    done
    popd
}

podman-copy-image-storage() {
    IMAGE=$1
    podman save --format oci-archive -o _temp.tar $IMAGE
    podman rmi $IMAGE
    podman --root /media/Disk/Prog/docker-images/ load -i _temp.tar
}

function frg {
    result=`rg --ignore-case --color=always --line-number --no-heading "$@" |
      fzf --ansi \
          --color 'hl:-1:underline,hl+:-1:underline:reverse' \
          --delimiter ':' \
          --preview "bat --color=always {1} --theme='Solarized (light)' --highlight-line {2}" \
          --preview-window 'up,60%,border-bottom,+{2}+3/3,~3,wrap'`
    file="${result%%:*}"
    linenumber=`echo "${result}" | cut -d: -f2`
    if [ ! -z "$file" ]; then
        $EDITOR +"${linenumber}" "$file"
    fi
}

export TERM=xterm-256color
eval "$(direnv hook bash)"
