# -*- mode: shell-script; -*-
_ff() {
    local out file fzf_cmd fzf_opts rc
    fzf_cmd=$2
    fzf_opts="--preview 'bat --style=numbers --color=always {}'"
    IFS=$'\n'
    out=$(FZF_DEFAULT_COMMAND="$fzf_cmd" FZF_DEFAULT_OPTS="$fzf_opts" fzf-tmux --print-query --query="$1")
    rc=$?
    if [[ $rc -eq 0 ]]; then
        file=$(echo "$out" | tail -n 1)
        emacsclient -nw "$file"
    fi
}

ff() {
    _ff "$1" "fd -t f"
}

fff() {
    _ff "$1" "fd -t f -j4 -x file | awk -F: '/ASCII text/ {print \$1}'"
}

function paperless-redo {
    docker exec -d -e "PAPERLESS_OCR_MODE=force" paperless_webserver_1 document_archiver --overwrite --document $1
}

function wait-pid {
    pid=$1
    name=$(ps -o command --no-headers -p "$pid" | awk '{print $1}')
    tail --pid=$pid -f /dev/null && apprise 'dbus://' -b "$name Done"
}

function whatsapp {
    out_file="${2:-out.mp4}"
    input_file="$1"
    ffmpeg -i "$input_file" \
           -c:v libx264 -pix_fmt yuv420p \
           -profile:v baseline -level 3.0 \
           -vf "pad=ceil(iw/2)*2:ceil(ih/2)*2" -vb 1024k \
           -acodec aac -ar 44100 -ac 2\
           -minrate 1024k -maxrate 1024k -bufsize 1024k \
           -movflags +faststart \
           "$out_file";
}

function sans-ext {
    filename=$(basename -- "$1")
    extension="${filename##*.}"
    filename="${filename%.*}"
    echo ${filename}
}

pdf-k2opt() {
    dir="${1:-PDF}"
    mkdir K2OPT;
    mkdir -p $dir/Converted
    pushd $dir
    for i in *.pdf; do
        echo "$i"
        echo | k2pdfopt -w 758 -h 1024 -odpi 212 -fc- "$i";
        mv "$i" Converted/
        mv "${i%.pdf}_k2opt.pdf" "../K2OPT/$i"
    done
    popd
}

podman-copy-image-storage() {
    IMAGE=$1
    podman save --format oci-archive -o _temp.tar $IMAGE
    podman rmi $IMAGE
    podman --root /media/Disk/Prog/docker-images/ load -i _temp.tar
}

function frg {
    result=`rg --ignore-case --color=always --line-number --no-heading "$@" |
      fzf --ansi \
          --color 'hl:-1:underline,hl+:-1:underline:reverse' \
          --delimiter ':' \
          --preview "bat --color=always {1} --theme='Solarized (light)' --highlight-line {2}" \
          --preview-window 'up,60%,border-bottom,+{2}+3/3,~3,wrap'`
    file="${result%%:*}"
    linenumber=`echo "${result}" | cut -d: -f2`
    if [ ! -z "$file" ]; then
        $EDITOR +"${linenumber}" "$file"
    fi
}

lake() {
    bsub -o out.lsf -J $(basename $PWD) -q medium -R "${LSFREQ_SVUNIT}" make LOG_LEVEL=WARNING $@
}

alias p4_=/tools/xint/prod/bin/p4
p4-diff-shelve() {
    shelve=$1; shift;
    p4_ opened | tr '#' ' ' | awk '{print $1}' | xargs -n1 -I{} p4 diff {}@=$shelve
}

p4() {
    local args=( $@ )
    local cmd=$args

    local p4aliases=${P4ALIASES:-$HOME}/.p4aliases
    local bp4oaliases=${BP4OALIASES:-$HOME/.config/bp4o/aliases}
    oldpath="$PATH"
    PATH="/home/furkanu/.local/bin/bp4o/:$PATH"
        if [ ${P4VERSION%.*} -ge 2016 ] && [ -f $p4aliases ]; then
        # Search for and apply aliases from Perforce
        local p4cmd=$(perl -n -e "print if \$_ =~ s/^$args\b.*=\s*(\w+).*/\1/" $p4aliases)
        if [ -n "$p4cmd" ]; then
            cmd=$p4cmd
        fi
    elif [ -f $bp4oaliases ]; then
        # Search for and apply aliases from BP4O
        local alias=$(perl -n -e "print if \$_ =~ s/$args\s*=\s*(.+)/\1/" $bp4oaliases)
        if [ -n  "$alias" ]; then
            args=( ${args[@]/#$args/$alias} )
            cmd=$args
        fi
    fi

    p4bin=$(type -P p4)
    if command which p4-$cmd &>/dev/null; then
        p4-$cmd $p4bin ${args[@]}
    else
        $p4bin ${args[@]}
    fi
    PATH="$oldpath"
}
